name: Build and Test

on:
  push:
    branches: [main, release, hotfix]
  pull_request:
    branches: [main, release, hotfix]

jobs:
  build:
    name: Audit
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Check out code
        uses: actions/checkout@v2

      - name: Tidy dependencies
        run: go mod tidy  

      - name: Vendor dependencies
        run: go mod vendor

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck $(go list ./... | grep -v /vendor/)

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint $(go list ./... | grep -v /vendor/)

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        go: ["1.19"]
    runs-on: ${{ matrix.os }}
    needs: [build]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Check out code
        uses: actions/checkout@v2

      - name: Tidy dependencies
        run: go mod tidy  

      - name: Vendor dependencies
        run: go mod vendor

      - name: Vars
        id: vars
        run: |
          echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=go_cache::$(go env GOCACHE)"

      - name: Cache the build cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.vars.outputs.go_cache }}
          key: ${{ runner.os }}-go${{ matrix.go }}-release-${{ hashFiles('**/go.sum') }}
          restore-keys: |
                        ${{ runner.os }}-go${{ matrix.go }}-release

      - name: Test
        run: go test -race -vet=off $(go list ./... | grep -v /vendor/)
